
# Creating VMs

- hosts: operation_node_to_add
  gather_facts: false
  vars_files:
    - vars_files/ceph-vars.yml
    - vars_files/ceph-mon-vars.yml
    - vars_files/ceph-osd-vars.yml
    - vars_files/ceph-admin-vars.yml
  tasks:
    - include_role:
        name: proxmox_kvm
      vars:
        node: "{{ operation_node_short }}"
        api_user: "{{ api_username }}"
        api_password: "{{ api_pass }}"
        api_host: "{{ operation_node_short }}"
        clone: "{{ item.template_name }}"
        target: "{{ item.target_node }}"
        vmid: "{{ item.template_id }}"
        name: "{{ item.vm_name }}"
        timeout: 1200
      with_items:
        - "{{ ceph_admin_vars }}"
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"
    - include_role:
        name: proxmox_kvm
        tasks_from: set_vms
      vars:
        node: "{{ item.target_node }}"
        api_user: "{{ api_username }}"
        api_password: "{{ api_pass }}"
        api_host: "{{ operation_node_short }}"
        name: "{{ item.vm_name }}"
        boot: '{{ boot_order }}'
        scsihw: "{{ scsi_hw }}"
        net0: "{{ item.net0_hw }}"
        cores: "{{ item.cores_num }}"
        vcpus: "{{ item.vcpus_num }}"
        memory: "{{ item.memory_size }}"
        searchdomains: "{{ searchdomain_cloud }}"
        nameservers: "{{ nameserver_cloud }}"
        ciuser: "{{ ceph_user }}"
        cipassword: "{{ ceph_pass }}"
        sshkeys: "{{ idrsapub }}"
        ipconfig0: "{{ item.network_cloud }}"
        update: yes
        timeout: 300
      with_items:
        - "{{ ceph_admin_vars }}"
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"       
    - include_role:
        name: proxmox_kvm
        tasks_from: change_state_vm  
      vars:
        node: "{{ item.target_node }}"
        api_user: "{{ api_username }}"
        api_password: "{{ api_pass }}"
        api_host: "{{ operation_node_short }}"
        name: "{{ item.vm_name }}"
        state: started
        update: yes
        timeout: 120
        force: no
      with_items:
        - "{{ ceph_admin_vars }}"
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"
    - include_role:
        name: wait_for
      vars:
        host: "{{ item.ip_cloud }}"
        port: 22
        delay: 120
      with_items:
        - "{{ ceph_admin_vars }}"
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"

# Setting enviorment

- hosts: cephcluster
  gather_facts: false
  vars_files:
    - vars_files/ceph-vars.yml
    - vars_files/ceph-mon-vars.yml
    - vars_files/ceph-osd-vars.yml
    - vars_files/ceph-admin-vars.yml
  tasks:
    - include_role:
        name: replace
      vars:
        path: "{{ item.path }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      with_items:
        - { path: /etc/ssh/sshd_config, regexp: 'PasswordAuthentication no', replace: 'PasswordAuthentication yes' }
        - { path: /etc/hostname, regexp: '.{{ searchdomain_cloud }}', replace: '' }
        - { path: /etc/selinux/config, regexp: 'enforcing', replace: 'disabled' }
    - include_role:
        name: lineinfile
      vars:
        - path: /etc/cloud/templates/hosts.redhat.tmpl
          line: 127.0.0.1 localhost
    - include_role:
        name: lineinfile
      vars:
        path: /etc/cloud/templates/hosts.redhat.tmpl
        line: '{{ item.ip_cloud }} {{ item.vm_name }}.{{ ceph_domain }} {{ item.vm_name }}'
      with_items:
        - "{{ ceph_admin_vars }}"
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"
    - include_role:
        name: reboot
    - include_role:
        name: shell
      vars:
        shell: ssh-keyscan 127.0.0.1 >> /{{ ceph_user }}/.ssh/known_hosts
    - include_role:
        name: shell
      vars:
        shell: ssh-keyscan localhost >> /{{ ceph_user }}/.ssh/known_hosts      
    - include_role:
        name: shell
      vars:
        shell: ssh-keyscan "{{ item.ip_cloud }}" >> /{{ ceph_user }}/.ssh/known_hosts
      with_items:
        - "{{ ceph_admin_vars }}"
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"
    - include_role:
        name: blockinfile
      vars:
        path: /{{ ceph_user }}/.ssh/config
        block: |
               Host {{ item.vm_name }}
                  Hostname {{ item.ip_cloud }}
                  User {{ ceph_user }}
        mark_name: "{{ item.vm_name }}"
        state: present
      with_items:
        - "{{ ceph_admin_vars }}"
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"
    - include_role:
        name: copy
      vars:
        src: id_rsa
        dest: /{{ ceph_user }}/.ssh/id_rsa
        owner: "{{ ceph_user }}"
        group: "{{ ceph_user }}"
        mode: '400'
    - include_role:
        name: shell
      vars:
        shell: localectl set-keymap "{{ keyboard_layout }}"
    - include_role:
        name: yum
      vars:
        name: "{{ item }}"
        state: latest
      with_items:
        - "*"
        - qemu-guest-agent
        - python3    
        - python3-pip
        - chrony
    - include_role:
        name: timezone
      vars:
        name: "{{ time_zone }}"
    - include_role:
        name: file
      vars:
        path: /etc/chrony.conf
        state: "{{ item }}"
      with_items:
        - absent
        - touch
    - include_role:
        name: systemd
      vars:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - chronyd
        - qemu-guest-agent
        - sshd
    - include_role:
        name: yum
      vars:
        name: "*"
        state: latest
      
# Set chronyd server

- hosts: cephadmin, cephmons
  gather_facts: false
  vars_files:
    vars_files/ceph-vars.yml
  tasks:
    - include_role:
        name: shell
      vars:
        shell: echo -e "{{ chrony_server_set }}" >> /etc/chrony.conf

# Set chronyd clients

- hosts: cephosds
  gather_facts: false
  vars_files:
    - vars_files/ceph-vars.yml
    - vars_files/ceph-mon-vars.yml
    - vars_files/ceph-admin-vars.yml
  tasks:
    - include_role:
        name: lineinfile
      vars:
        path: /etc/chrony.conf
        line: 'server {{ item.ip_cloud }}'
      with_items: 
        - "{{ ceph_admin_vars }}"
        - "{{ ceph_mon_vars }}"

- hosts: cephcluster
  gather_facts: false
  vars_files:
    - vars_files/ceph-vars.yml
  tasks:
    - include_role:
        name: shell
      vars:
        shell: timedatectl set-ntp true
    - include_role:
        name: systemd
      vars:
        name: chronyd
        state: restarted
        enabled: yes


# Ceph-deploy

- hosts: cephadmin
  gather_facts: false
  vars_files:
    - vars_files/ceph-vars.yml
    - vars_files/ceph-mon-vars.yml
    - vars_files/ceph-osd-vars.yml
    - vars_files/ceph-admin-vars.yml
  tasks:
    - include_role:
        name: copy
      vars:
        src: repo
        dest: /etc/yum.repos.d/ceph.repo
        owner: "{{ ceph_user }}"
        group: "{{ ceph_user }}"
        mode: '644'
    - include_role:
        name: yum
      vars:
        name: ceph-deploy
        state: latest
    - include_role:
        name: shell
      vars:
        shell: ceph-deploy new "{{ initial_mon_name }}"
    - include_role:
        name: lineinfile
      vars:
        path: /{{ ceph_user }}/ceph.conf
        line: public network = {{ ceph_network }}
    - include_role:
        name: shell
      vars:
        shell: ceph-deploy install --release nautilus "{{ item.vm_name }}"
      with_items:
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"
    - include_role:
        name: shell
      vars:
        shell: ceph-deploy mon create-initial
    - include_role:
        name: shell
      vars:
        shell: ceph-deploy --overwrite-conf admin "{{ item.vm_name }}"
      with_items:
        - "{{ ceph_mon_vars }}"
        - "{{ ceph_osd_vars }}"
    - include_role:
        name: shell
      vars:
        shell: ceph-deploy mgr create "{{ item.vm_name }}"
      with_items:
        - "{{ ceph_mon_vars }}"
    - include_role:
        name: shell
      vars:
        shell: ceph-deploy osd create --data /dev/sdb "{{ item.vm_name }}"
      with_items:
        - "{{ ceph_osd_vars }}"
    - include_role:
        name: shell
      vars:
        shell: ceph-deploy mon add "{{ item.vm_name }}"
      with_items:
        - "{{ ceph_mon_vars }}"
